const aBigNumber = 8907245920742093847n;
const anotherBigNumber = BigInt(8907245920742093847);
console.log(aBigNumber);
console.log(anotherBigNumber);


//Notas

// L√≠mites num√©ricos en JavaScript
// üìè JavaScript tiene l√≠mites num√©ricos, un m√°ximo Number.MAX_SAFE_INTEGER y un m√≠nimo Number.MIN_SAFE_INTEGER. Fuera de estos l√≠mites, los c√°lculos matem√°ticos pueden fallar y mostrar resultados err√≥neos. Con BigInt esto se resuelve.
// .

// Diferencia entre el operador OR y el Nullish coalescing
// üî® El operador OR (||) eval√∫a un valor falsey. Un valor falsy es aquel que es falso en un contexto booleano, estos son: 0, "" (string vac√≠o), false, NaN, undefined o null.
// .
// Puede que recibas una variable con un valor falsy que necesites asignarle a otra variable, que no sea null o undefined. Si eval√∫as con el operador OR, este lo cambiar√°, provocando un resultado err√≥neo.

const id = 0

const orId = id || "Sin id"
const nullishId = id ?? "Sin id"

console.log( orId ) //  'Sin id'
console.log( nullishId )  // 0